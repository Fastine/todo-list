!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);class n{constructor(e,t){this.name=e,this.color=t,this.tasks=[]}addTask(e){this.tasks.push(e)}removeTask(e){this.tasks.splice(e,1)}}class o{constructor(e,t,r,n){this.name=e,this.description=t,this.dueDate=r,this.priority=n,this.complete=!1}}const s=(()=>{let e=[];const t=function(e,t,r,n,s){t=new o(t,r,n,s),e.addTask(t)};return{newTask:t,projects:e,newProject:function(t,r){t=new n(t,r),e.push(t)},newTask:t}})();r.d(t,"theDOM",(function(){return c}));const c=(()=>{document.querySelector("new-project-name"),document.querySelector("new-project-submit");const e=document.getElementById("project-list");document.querySelector("new-task-name"),document.querySelector("new-task-submit"),document.getElementById("task-list");return{renderProjects:function(){s.projects.forEach((function(t,r){const n=document.createElement("div");n.className="project-card",n.setAttribute("project-id",r),n.innerHTML=`<span class="card-title ${t.color}">${t.name}</span>\n                <span class="card-description hidden">${t.description}</span>`,e.append(n)}))},renderTasks:function(){if(c.projectList.firstChild){let e=!1;const t=c.projectList.children;for(i=0;i<t.length;i++){t[i].classList.includes(".active-project")&&(e=!0)}0==e&&(c.projectList.firstChild.className+=" active-project")}const e=document.querySelector(".active-project").getAttribute("project-id");s.projects[`${e}`].tasks.forEach((function(e,t){const r=document.createElement("div");r.className="task-card",r.setAttribute("task-id",t),r.innerHTML=`<span class="card-title">${e.name}</span>\n                        <span class="card-description hidden">${e.description}</span>\n                        `,c.taskList.append(r)}))},activateProject:function(e){for(document.querySelector(".active-project").classList.remove("active-project");c.taskList.firstChild;)c.taskList.removeChild(firstChild);document.querySelector(`[project-id="${e}"]`).className+=" active-project",c.renderTasks()}}})();s.newProject("default"),console.log(s.projects[0]),s.newProject("Shopping"),console.log(s.projects),s.newTask(s.projects[0],"test task 1"),console.log(c.projectList),c.renderProjects(),c.renderTasks()}]);